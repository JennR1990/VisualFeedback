---
title: "Visual Feedback and The Two-Rate Model"
output: html_notebook
---

This notebook will allow you to download the necessary data from OSF and compute some stats and make the corresponding plots to those analysis. 

```{r echo=FALSE}
downloadOSFdata()
loadalldata()
```

Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.

When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).

The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
```{r}

svglite('figs/Visual Feedback.svg', width = 8, height = 10, system_fonts=list(sans = "Arial"))
layout(matrix(c(1,2), nrow = 2), heights = c(2,2))
VisualFeedbackReaches(active_reaches, passive_reaches, terminal_reaches)
Localizations(passive_localization,terminal_localization, exposure_localization)

dev.off()

svglite('figs/Reach Aftereffects.svg', width = 8, height = 10, system_fonts=list(sans = "Arial"))
layout(matrix(c(1,2), nrow = 2), heights = c(2,2))
ReachAfterEffectReaches(active_reaches, nocursor_reaches[33:320,], nocursorI_reaches[33:320,])
ReachAfterEffects(active_reaches, nocursor_nocursors, nocursorI_nocursors)
dev.off()

```

```{r}
PausePars<-Reachmodel(pause_reaches[33:320,], 'Pause', color = colorNL)
NoCPars<-Reachmodel(nocursor_reaches[33:320,], 'No-Cursor', color = colorNC)
NoCIPars<-Reachmodel(nocursorI_reaches[33:320,], 'No-Cursor', grid = 'skewed', color = colorNNC)
ActivePars<-Reachmodel(active_reaches, 'Active', color = colorA)
PassivePars<-Reachmodel(passive_reaches, 'Passive', color = colorPA)
TerminalPars<-Reachmodel(terminal_reaches, 'Terminal', color = colorT)
```

```{r}
Active_metrics<- GroupModelAICs(active_reaches, 'Active')
Passive_metrics<- GroupModelAICs(passive_reaches, 'Passive')
Pause_metrics<- GroupModelAICs(pause_reaches, 'Pause')
Terminal_metrics<- GroupModelAICs(terminal_reaches, 'Terminal')
NC_metrics<- GroupModelAICs(nocursor_reaches, 'No-Cursor', 'skewed')
NCI_metrics<- GroupModelAICs(nocursorI_reaches,'No-Cursor_I', 'skewed')
metrics<- rbind(Active_metrics, passive_reaches, Pause_metrics, NC_metrics, NCI_metrics,Terminal_metrics)
groups = c('active', 'passive','pause', 'nocursor', 'nocursor_NI', 'Terminal')
metrics$group<- groups
```

```{r}
LocalizationModelCompare(passive_localization, passive_reaches, colorPA)
LocalizationModelCompare(active_localization, active_reaches, colorA)
LocalizationModelCompare(terminal_localization, terminal_reaches, colorT)
```


