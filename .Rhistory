ncamean[3]<- mean(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE)
ncamean[4]<- mean(Ttestdata$R2[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE)
ncamean[5]<- mean(Ttestdata$EC_Late[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE)
ncaSE<- c()
ncaSE[1]<- (sd(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
ncaSE[2]<- (sd(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
ncaSE[3]<- (sd(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
ncaSE[4]<- (sd(Ttestdata$R2[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
ncaSE[5]<- (sd(Ttestdata$EC_Late[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
plot(y=ncamean[1:3]*-1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = 'Blue')
sd(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE)
sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
(sd(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
(sd(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_A']))
plot(y=ncamean[1:3]*-1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-CursorI_No-Cursors_A']))),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
plot(y=ncamean[1:3]*-1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1
ncamean<- c()
ncamean[1]<- mean(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE)
ncamean[2]<- mean(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE)
ncamean[3]<- mean(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE)
ncamean[4]<- mean(Ttestdata$R2[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE)
ncamean[5]<- mean(Ttestdata$EC_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE)
ncaSE<- c()
ncaSE[1]<- (sd(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))
ncaSE[2]<- (sd(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))
ncaSE[3]<- (sd(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))
ncaSE[4]<- (sd(Ttestdata$R2[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))
ncaSE[5]<- (sd(Ttestdata$EC_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], na.rm = TRUE))/sqrt(length(Ttestdata$Experiment[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))
plot(y=ncamean[1:3]*-1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
plot(y=ncamean[1:3]*-1, x = c(1:3), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
plot(y=ncamean[1:3]*-1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
plot(y=ncamean[1:3]*-1, x = c(1:3), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1:3), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1:3), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
plot(y=ncamean[1:3]*-1, x = c(1:3), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1:3), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1:3), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(sample(x = c(.95:1.05), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A'], replace= TRUE)),col = colorNC_trans)
)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(sample(x = c(.95:1.05), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
)
sample(x = c(.95:1.05), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE)
sample(x = c(.95:105), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE)
sample(x = c(.95:1.05), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE)
.95:1.05
seq(from = .95, to = 1.05, by = .01)
sample(x = c(seq(from = .95, to = 1.05, by = .01)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE)
x= sample(x = c(seq(from = .95, to = 1.05, by = .01)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE)
arrows(x0 = c(1:3), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1:3), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x= sample(x = c(seq(from = .95, to = 1.05, by = .01)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x= sample(x = c(seq(from = 1.95, to = 2.05, by = .01)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x= sample(x = c(seq(from = 2.95, to = 3.05, by = .01)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
Exposure_PropMetrics<-ExpoLocalizationModelCompare(exposure_localization, exposure_reaches, colorE)
plotfitPropModel(exposure_reaches, exposure_localization, colorE, 'Exposure Prop Model', exp = 'exp')
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
VisualFeedbackReaches()
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
VisualFeedbackReaches()
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
VisualFeedbackReaches()
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
VisualFeedbackReaches()
PlotoutLine()
PlotoutLine(active_localization)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization)
exposure_reaches
nrow(exposure_reaches)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization)
ExposureDatas(exposure_localization, exposure_reaches)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
VisualFeedbackReaches()
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization, exposure_reaches)
dataset<- exposure_reaches
dataCIs <- trialCI(data = dataset)
dataCIs <- dataCIs * rotate
rotate = -1
dataCIs <- dataCIs * rotate
dataset["distortion"][is.na(dataset["distortion"])] <- 0
dataset$Mean <-
rowMeans(dataset[, 2:ncol(dataset)], na.rm = TRUE)
dataset
View(dataset)
x <- x
y <- c(dataCIs[, 1], rev(dataCIs[, 2]))
x =  c(c(240:288), rev(c(240:288)))
x <- x
g<- 240:288
x =  c(c(241:288), rev(c(241:288)))
polygon(x, y, col = translist[trans], border = NA)
trans<- 7
color<- 7
colorlist <- c(colorA, colorNL, colorNC, colorNNC,colorPA,colorT,colorE)
translist <-
c(colorA_trans,
colorNL_trans,
colorNC_trans,
colorNNC_trans,
colorPA_trans,
colorT_trans,
colorE_trans)
polygon(x, y, col = translist[trans], border = NA)
lines(x[1:(dataset$Mean)],dataset$Mean * rotate, col = colorlist[color], lwd = 1.5, lty = line )
lines(x[1:nrow(dataset$Mean)],dataset$Mean * rotate, col = colorlist[color], lwd = 1.5, lty = line )
dataCIs <- trialCI(data = dataset)
dataCIs <- dataCIs * rotate
dataset["distortion"][is.na(dataset["distortion"])] <- 0
dataset$Mean <-
rowMeans(dataset[, 2:ncol(dataset)], na.rm = TRUE)
View(dataset)
x <- x
y <- c(dataCIs[, 1], rev(dataCIs[, 2]))
polygon(x, y, col = translist[trans], border = NA)
y
lines(x = c(240:288), y = dataset$Mean)
lines(x = c(241:288), y = dataset$Mean)
plotfitPropModel(exposure_reaches, exposure_localization, colorE, 'Exposure Prop Model', exp = 'exp')
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
c(c(241:288),rev(241:288))
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization, exposure_reaches)
ExposureDatas(exposure_localization, exposure_reaches)
PlotData(exposure_localization, 7,7,1)
PlotoutLine(exposure_localization, 16:17,c(7,7), "Hand Localizations")
PlotData(exposure_localization, 7,7,1)
211/256
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization, exposure_reaches)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization, exposure_reaches)
exprr<- exposure_reaches
PlotoutLine(exposure_localization, 16:17,c(7,7), "Hand Localizations")
PlotData(exposure_localization, 7,7,1)
dataCIs <- trialCI(data = exprr)
dataCIs <- dataCIs * rotate
exprr["distortion"][is.na(exprr["distortion"])] <- 0
exprr$Mean <-
rowMeans(exprr[, 2:ncol(exprr)], na.rm = TRUE)
x <- c(c(241:288),rev(241:288))
y <- c(dataCIs[, 1], rev(dataCIs[, 2]))
polygon(x, y, col = rgb(.8,.8,.8,.2), border = NA)
lines(x[240:288],exprr$Mean * rotate, col = grey, lwd = 1.5, lty = line )
lines(x[241:288],exprr$Mean * rotate, col = grey, lwd = 1.5, lty = line )
lines(x[241:288],exprr$Mean * rotate, col = 'grey', lwd = 1.5, lty = line )
lines(x[241:288],exprr$Mean * -1, col = 'grey', lwd = 1.5, lty = line )
lines(x[241:288],exprr$Mean * -1, col = 'grey', lwd = 1.5, lty = 'l' )
lines(x[241:288],exprr$Mean * -1, col = 'grey', lwd = 1.5, lty = 1 )
lines(x[241:288],exprr$Mean * -1, col = "black", lwd = 1.5, lty = 1 )
PlotoutLine(exposure_localization, 16:17,c(7,7), "Hand Localizations")
PlotData(exposure_localization, 7,7,1)
dataCIs <- trialCI(data = exprr)
dataCIs <- dataCIs * -1
exprr["distortion"][is.na(exprr["distortion"])] <- 0
exprr$Mean <-
rowMeans(exprr[, 2:ncol(exprr)], na.rm = TRUE)
x <- c(c(241:288),rev(241:288))
y <- c(dataCIs[, 1], rev(dataCIs[, 2]))
polygon(x, y, col = rgb(.8,.8,.8,.2), border = NA)
lines(x[241:288],exprr$Mean * -1, col = "black", lwd = 1.5, lty = 1 )
lines(x=x[241:288],y=exprr$Mean * -1, col = "black", lwd = 1.5, lty = 1 )
PlotoutLine(exposure_localization, 16:17,c(7,7), "Hand Localizations")
polygon(x, y, col = rgb(.8,.8,.8,.2), border = NA)
lines(x=x[241:288],y=exprr$Mean * -1, col = "black", lwd = 1.5, lty = 1 )
lines(x=241:288,y=exprr$Mean * -1, col = "black", lwd = 1.5, lty = 1 )
dataCIs <- trialCI(data = exprr)
dataCIs <- dataCIs * 1
exprr["distortion"][is.na(exprr["distortion"])] <- 0
exprr$Mean <-
rowMeans(exprr[, 2:ncol(exprr)], na.rm = TRUE)
x <- c(c(241:288),rev(241:288))
y <- c(dataCIs[, 1], rev(dataCIs[, 2]))
polygon(x, y, col = rgb(.8,.8,.8,.2), border = NA)
lines(x=241:288,y=exprr$Mean * 1, col = "black", lwd = 1.5, lty = 1 )
View(exposure_reaches)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization, exposure_reaches)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
ExposureDatas(exposure_localization, exposure_reaches)
svglite('figs/Model Fits2.svg', width = 12, height = 8, system_fonts=list(sans = "Arial"))
layout(matrix(c(1,2,3,4), nrow = 2), heights = c(2,2))
#VisualFeedbackReaches()
#ActivePars<-Reachmodel(active_reaches, 'Active', color = colorA)
ExposureDatas(exposure_localization, exposure_reaches)
PassivePars<-Reachmodel(passive_reaches, 'Passive', color = colorPA)
TerminalPars<-Reachmodel(terminal_reaches, 'Terminal', color = colorT)
NoCIPars<-Reachmodel(newnocursor_reaches[33:320,], 'No-Cursor', grid = 'skewed', color = colorNC)
dev.off()
NoCIPars<-Reachmodel(newnocursor_reaches[33:320,], 'No-Cursor', grid = 'skewed', color = colorNC)
ReachmodelCTs()
VisualFeedbackReaches(active_reaches, passive_reaches, terminal_reaches)
VisualFeedbackReaches()
ReachAfterEffects(active_reaches, nocursor_nocursors, nocursorI_nocursors)
ReachAfterEffects(active_reaches, nocursor_nocursors[33:320,], nocursorI_nocursors[33:320,])
ReachAfterEffectReaches(active_reaches, nocursor_reaches[33:320,], nocursorI_reaches[33:320,])
ReachAfterEffects(active_reaches, nocursor_nocursors, nocursorI_nocursors)
RAEPlots(active_reaches, nocursor_reaches[33:320,], nocursorI_reaches[33:320,], nocursor_nocursors, nocursorI_nocursors)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
RAEPlots(active_reaches, nocursor_reaches[33:320,], nocursorI_reaches[33:320,], nocursor_nocursors, nocursorI_nocursors)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
RAENewPlots(active_reaches, newnocursor_nocursors)
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
source('E:/Jenn/Documents/VisualFeedback/R/Plots.R', encoding = 'UTF-8')
RAENewPlots(active_reaches, newnocursor_nocursors)
svglite('figs/Model Fits3.svg', width = 12, height = 8, system_fonts=list(sans = "Arial"))
layout(matrix(c(1,2,3,4), nrow = 2), heights = c(2,2))
#VisualFeedbackReaches()
#ActivePars<-Reachmodel(active_reaches, 'Active', color = colorA)
RAENewPlots(active_reaches, newnocursor_nocursors)
ExposureDatas(exposure_localization, exposure_reaches)
#PassivePars<-Reachmodel(passive_reaches, 'Passive', color = colorPA)
TerminalPars<-Reachmodel(terminal_reaches, 'Terminal', color = colorT)
NoCIPars<-Reachmodel(newnocursor_reaches[33:320,], 'No-Cursor', grid = 'skewed', color = colorNC)
dev.off()
plotavereapoints<- function(){
plot(y=ncamean[1:3]*-1, x = c(1:3), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1:3), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1:3), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
#points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x= sample(x = c(seq(from = .90, to = 1.0, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x= sample(x = c(seq(from = 2.0, to = 2.1, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x= sample(x = c(seq(from = 3, to = 3.1, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
#legend(0.3,35, legend = c("No-"), col = c(colorNNC, colorNC), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
plotavereapoints()
plotavereapoints<- function(){
plot(y=ncamean[1:3]*-1, x = c(1,2.05, 3.05), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1,2.05, 3.05), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1,2.05, 3.05), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
#points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x= sample(x = c(seq(from = .95, to = 1.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x= sample(x = c(seq(from = 2.0, to = 2.1, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x= sample(x = c(seq(from = 2.9, to = 3, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
#legend(0.3,35, legend = c("No-"), col = c(colorNNC, colorNC), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
plotavereapoints()
plotavereapoints<- function(){
plot(y=ncamean[1:3]*-1, x = c(1,2.05, 2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1,2.05, 2.95), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1,2.05, 2.95), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
#points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x= sample(x = c(seq(from = .95, to = 1.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x= sample(x = c(seq(from = 2.0, to = 2.1, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x= sample(x = c(seq(from = 2.9, to = 3, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
#legend(0.3,35, legend = c("No-"), col = c(colorNNC, colorNC), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
plotavereapoints()
plotavereapoints<- function(){
plot(y=ncamean[1:3]*-1, x = c(1:3), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1:3), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1:3), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
#points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x= sample(x = c(seq(from = .95, to = 1.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x= sample(x = c(seq(from = 1.95, to = 2.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x= sample(x = c(seq(from = 2.95, to = 3.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
lines(c(1, 2, 2, 3, 3),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
#legend(0.3,35, legend = c("No-"), col = c(colorNNC, colorNC), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
plotavereapoints()
plotavereapoints<- function(){
plot(y=ncamean[1:3]*-1, x = c(1:3), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorNC, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(1:3), y0 = (ncamean[1:3]*-1) - ncaSE[1:3]*2, x1 = c(1:3), y1 = (ncamean[1:3]*-1) + ncaSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorNC)
#points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x = c(rep(.95, times = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x = c(rep(1.95, times = length(Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
#points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x = c(rep(2.95, times = length(Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']))),col = colorNC_trans)
points(y=Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16, x= sample(x = c(seq(from = .95, to = 1.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Early[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1, pch= 16,x= sample(x = c(seq(from = 1.95, to = 2.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
points(y=Ttestdata$R1_Late[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']*-1,pch= 16, x= sample(x = c(seq(from = 2.95, to = 3.05, by = .02)), size = length(Ttestdata$Aligned[Ttestdata$Experiment == 'No-Cursor_No-Cursors_A']), replace= TRUE),col = colorNC_trans)
lines(c(1, 1.90, 1.90, 3.1, 3.1),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
#legend(0.3,35, legend = c("No-"), col = c(colorNNC, colorNC), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
plotavereapoints()
plotproppoints<- function(){
plot(y=PAmean[1:3]*1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorA, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (PAmean[1:3]) - PASE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (PAmean[1:3]) + PASE[1:3]*2, code = 3, angle = 90, length = .02, col = 'Orange')
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Active'], pch= 16,x = c(rep(.95, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Active'],pch= 16, x = c(rep(1.95, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Active'], pch= 16,x = c(rep(2.95, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=PPmean[1:3]*1,x = c(.85,1.85,2.85), pch = 15,  col = colorPA)
arrows(x0 = c(.85,1.85,2.85), y0 = (PPmean[1:3]) - PPSE[1:3]*2, x1 = c(.85,1.85,2.85), y1 = (PPmean[1:3]) + PPSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorPA)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(.85, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(1.85, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(2.85, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=PTmean[1:3]*1,x = c(1.05,2.05,3.05), pch = 15,  col = colorT)
arrows(x0 = c(1.05,2.05,3.05), y0 = (PTmean[1:3]) - PTSE[1:3]*2, x1 = c(1.05,2.05,3.05), y1 = (PTmean[1:3]) + PTSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorT)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(1.05, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(2.05, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(3.05, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(PEmean[1:3]*1, x = c(1.15,2.15,3.15),pch = 15,  col = colorE)
arrows(x0 = c(1.15,2.15,3.15), y0 = (PEmean[1:3]) - PESE[1:3]*2, x1 = c(1.15,2.15,3.15), y1 = (PEmean[1:3]) + PESE[1:3]*2, code = 3, angle = 90, length = .02, col = colorE)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Exposure'], pch= 16,x = c(rep(1.15, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Exposure'],pch= 16, x = c(rep(2.15, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Exposure'], pch= 16,x = c(rep(3.15, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
lines(c(1, 1.90, 1.90, 3.1, 3.1),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
legend(.3,35, legend = c("Active", "Passive", "Terminal", "Exposure"), col = c(colorA, colorPA, colorT, colorE), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
plotproppoints()
plotproppoints<- function(){
plot(y=PAmean[1:3]*1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorA, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (PAmean[1:3]) - PASE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (PAmean[1:3]) + PASE[1:3]*2, code = 3, angle = 90, length = .02, col = 'Orange')
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Active'], pch= 16,x = c(rep(.95, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Active'],pch= 16, x = c(rep(1.95, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Active'], pch= 16,x = c(rep(2.95, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=PPmean[1:3]*1,x = c(.85,1.85,2.85), pch = 15,  col = colorPA)
arrows(x0 = c(.85,1.85,2.85), y0 = (PPmean[1:3]) - PPSE[1:3]*2, x1 = c(.85,1.85,2.85), y1 = (PPmean[1:3]) + PPSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorPA)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(.85, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(1.85, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(2.85, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=PTmean[1:3]*1,x = c(1.05,2.05,3.05), pch = 15,  col = colorT)
arrows(x0 = c(1.05,2.05,3.05), y0 = (PTmean[1:3]) - PTSE[1:3]*2, x1 = c(1.05,2.05,3.05), y1 = (PTmean[1:3]) + PTSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorT)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(1.05, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(2.05, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(3.05, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(PEmean[1:3]*1, x = c(1.15,2.15,3.15),pch = 15,  col = colorE)
arrows(x0 = c(1.15,2.15,3.15), y0 = (PEmean[1:3]) - PESE[1:3]*2, x1 = c(1.15,2.15,3.15), y1 = (PEmean[1:3]) + PESE[1:3]*2, code = 3, angle = 90, length = .02, col = colorE)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Exposure'], pch= 16,x = c(rep(1.15, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Exposure'],pch= 16, x = c(rep(2.15, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Exposure'], pch= 16,x = c(rep(3.15, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
lines(c(1, 1.80, 1.80, 3.1, 3.1),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
legend(.3,35, legend = c("Active", "Passive", "Terminal", "Exposure"), col = c(colorA, colorPA, colorT, colorE), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
svglite('figs/Implicit learning Zoomed in.svg', width = 12, height = 4, system_fonts=list(sans = "Arial"))
layout(matrix(c(1,2), nrow = 1), heights = c(2,2))
#plotreapoints()
plotavereapoints()
plotproppoints()
dev.off()
plotproppoints<- function(){
plot(y=PAmean[1:3]*1, x = c(.95,1.95,2.95), pch = 15, axes = FALSE, xlab = "Block", ylab = "Hand Direction [°]", col = colorA, ylim = c(-8,30), cex.lab = 1.5, xlim = c(.5,3.5))
arrows(x0 = c(.95,1.95,2.95), y0 = (PAmean[1:3]) - PASE[1:3]*2, x1 = c(.95,1.95,2.95), y1 = (PAmean[1:3]) + PASE[1:3]*2, code = 3, angle = 90, length = .02, col = 'Orange')
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Active'], pch= 16,x = c(rep(.95, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Active'],pch= 16, x = c(rep(1.95, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Active'], pch= 16,x = c(rep(2.95, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Active']))),col = colorA_trans)
points(y=PPmean[1:3]*1,x = c(.85,1.85,2.85), pch = 15,  col = colorPA)
arrows(x0 = c(.85,1.85,2.85), y0 = (PPmean[1:3]) - PPSE[1:3]*2, x1 = c(.85,1.85,2.85), y1 = (PPmean[1:3]) + PPSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorPA)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(.85, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(1.85, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Passive'], pch= 16,x = c(rep(2.85, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Passive']))),col = colorPA_trans)
points(y=PTmean[1:3]*1,x = c(1.05,2.05,3.05), pch = 15,  col = colorT)
arrows(x0 = c(1.05,2.05,3.05), y0 = (PTmean[1:3]) - PTSE[1:3]*2, x1 = c(1.05,2.05,3.05), y1 = (PTmean[1:3]) + PTSE[1:3]*2, code = 3, angle = 90, length = .02, col = colorT)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(1.05, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(2.05, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Terminal'], pch= 16,x = c(rep(3.05, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Terminal']))),col = colorT_trans)
points(PEmean[1:3]*1, x = c(1.15,2.15,3.15),pch = 15,  col = colorE)
arrows(x0 = c(1.15,2.15,3.15), y0 = (PEmean[1:3]) - PESE[1:3]*2, x1 = c(1.15,2.15,3.15), y1 = (PEmean[1:3]) + PESE[1:3]*2, code = 3, angle = 90, length = .02, col = colorE)
points(y=TtestPdata$Aligned[TtestPdata$Experiment == 'Exposure'], pch= 16,x = c(rep(1.15, times = length(TtestPdata$Aligned[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
points(y=TtestPdata$R1_Early[TtestPdata$Experiment == 'Exposure'],pch= 16, x = c(rep(2.15, times = length(TtestPdata$R1_Early[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
points(y=TtestPdata$R1_Late[TtestPdata$Experiment == 'Exposure'], pch= 16,x = c(rep(3.15, times = length(TtestPdata$R1_Late[TtestPdata$Experiment == 'Exposure']))),col = colorE_trans)
lines(c(1, 1.80, 1.80, 3.2, 3.2),
c(0, 0, 30, 30, 30),
col = rgb(0., 0., 0.))
#lines(c(4.5, 5.5),
#     c(0, 0),
#     lty = 2,
#    col = rgb(0., 0., 0.))
axis(2, at = c(-5,0,5,10, 15,20,25, 30), cex.axis = 1.5, las = 2)
axis(1, at = c(1,2,3),labels = c("aligned", "R1_Early", "R1_Final"), cex.axis = 1.5)
legend(.3,35, legend = c("Active", "Passive", "Terminal", "Exposure"), col = c(colorA, colorPA, colorT, colorE), lty = c(1), lwd = c(2), cex = 1.5, bty = "n")
}
svglite('figs/Implicit learning Zoomed in.svg', width = 12, height = 4, system_fonts=list(sans = "Arial"))
layout(matrix(c(1,2), nrow = 1), heights = c(2,2))
#plotreapoints()
plotavereapoints()
plotproppoints()
dev.off()
